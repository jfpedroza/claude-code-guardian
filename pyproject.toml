[project]
name = "claude-code-guardian"
version = "0.1.0"
description = "Validation rules for tool usage and file access for Claude Code"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "cchooks>=0.1.2",
    "click>=8.0.0",
]

[project.scripts]
claude-code-guardian = "ccguardian.cli:main"

[tool.uv]
package = true

[tool.setuptools.packages.find]
include = ["ccguardian"]

[dependency-groups]
dev = [
    "ruff>=0.12.0",
    "mypy>=1.17.0",
    "pytest>=8.0.0",
    "pytest-cov>=6.2.0",
    "pytest-mock>=3.10.0",
]
test = [
    "pytest>=8.0.0",
    "pytest-cov>=6.2.0",
    "pytest-mock>=3.10.0",
]

[tool.pytest.ini_options]
minversion = "8.0"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=ccguardian",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
    "--cov-report=xml",
    "--cov-fail-under=80",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]

[tool.coverage.run]
source = ["ccguardian"]
branch = true
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    ".venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
